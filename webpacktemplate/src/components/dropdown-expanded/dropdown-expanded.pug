//-
  options.label_text - текст по умолчанию
  options.label_wrap - класс обертки label ("field_mid","field_big")
  options.label_id - id label'a ("guests-label", "guests-label_default", "amenities-label")
  options.list_name - класс основной части dropdown ('guests-list_default', 'guests-list', 'amenities-list')
  options.option_texts - массив со значениями option'ов
  options.isOpened - select is opened or not

  

include ../arrow/arrow
include ../elem-title/elem-title 


mixin dropdown-expanded(options)
        
  if !options
    - options = {}
  -
    const {label_text, label_wrap, label_id, list_name, option_texts, number_values, isOpened} = options;    
    let classes = '';
    classes += list_name ? list_name : '';
    classes += options.isOpened ? ' open' : '';
  
  div(class="select " + label_wrap)
    label(for= list_name id= label_id  class="select-expanded__label") #{label_text}
    +arrow({ name: "keyboard_arrow_down", color: "black"})
  div(class="select-expanded__options options-list " + classes)
    each option_text, index in option_texts
      .options-list__item
        .option-item
          span #{option_text}
          .option-counter
            span.option-counter__item.minus(class={counter_disabled: number_values[index] === 0}) -
            span(class= (index === 0) ? "option-counter__number numAdults" : "option-counter__number") #{number_values[index]}                        
            span.option-counter__item.plus + 
    if (list_name.includes("guests-list") || list_name.includes("guests-list_default"))
      .options-list__btns
        .select-btns
          if (list_name.includes("guests-list"))
            span.select-btns__clear очистить
            span.select-btns__submit применить

